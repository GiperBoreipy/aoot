services:
  server:
    build:
      context: aoot/
      dockerfile: Dockerfile
    image: aoot_server 
    container_name: aoot_server 
    restart: unless-stopped
    depends_on:
      - postgres

  postgres:
    image: postgres:16
    container_name: postgres 
    environment:
      POSTGRES_USER: "default_postgres_user"
      POSTGRES_PASSWORD: "default_postgres_password"
      POSTGRES_DB: "default_postgres_db"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    restart: unless-stopped

  adminer:
    image: adminer
    container_name: adminer
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  
volumes:
  postgres_data:
